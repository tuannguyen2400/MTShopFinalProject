@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc;
@using System;
@using MyWebsite_SaleManagement_.Models
@model Member
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Layout/LoginLayout.cshtml";
}

@*  <head>
        <title>The Login-Animated Website Template | Home :: w3layouts</title>
        <meta charset="utf-8">
        <link href="~/Content/css/style1.css" rel="stylesheet" type="text/css">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>
        <!--webfonts-->
        <link href="http://fonts.googleapis.com/css?family=Open+Sans:600italic,400,300,600,700" rel="stylesheet" type="text/css">
        <!--//webfonts-->
        <meta name="viewport" content="width=device-width" />
        <title>@ViewBag.Title</title>
    </head>


    <div class="head">
        <img src="~/Content/images/mem2.jpg" alt="">

    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
*@

<!DOCTYPE html>
<html>
<head>
    <title>The Login-Animated Website Template | Home :: w3layouts</title>
    <meta charset="utf-8">
    <link href="~/Content/css/style1.css" rel="stylesheet" type="text/css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>
    <!--webfonts-->
    <link href="http://fonts.googleapis.com/css?family=Open+Sans:600italic,400,300,600,700" rel="stylesheet" type="text/css">
    <!--//webfonts-->
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
</head>
<body>

    <!-----start-main---->
    <div class="login-form">

        <div class="head">
            <img src="~/Content/images/mem2.jpg" alt="">

        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <strong style="font-weight: bold" align="center" color="Orange"> WELCOME TO MY STORE</strong>

            <hr width="100%" align="center" color="Orange" />

            @*<strong style="font-weight: bold"> Account :</strong>*@
            <li>
                <strong style="font-weight: bold">Account :</strong>
                @Html.TextBoxFor(model => model.Account, new { @class = "cAccount" })
                @Html.ValidationMessageFor(model => Model.Account)

            </li>
            <li>
                <strong style="font-weight: bold">Name :</strong>
                @Html.TextBox("Name")
                @*<input type="text" class="text" value="Name" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Name';}"><a href="#" class=" icon user"></a>*@
            </li>
            <li>
                <strong style="font-weight: bold">Address :</strong>
                @Html.TextBox("Address")
                @*<input type="text" class="text" value="Adress" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Adress';}"><a href="#" class=" icon user"></a>*@
            </li>
            <li>
                <strong style="font-weight: bold">Email :</strong>
                @Html.TextBox("Email")
                @* <input type="text" class="text" value="Email" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Email';}"><a href="#" class=" icon user"></a>*@
            </li>
            <li>
                <strong style="font-weight: bold">PhoneNumber :</strong>
                @Html.TextBox("PhoneNumber")
                @* <input type="text" class="text" value="Email" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Email';}"><a href="#" class=" icon user"></a>*@
            </li>
            <div class="sign-up">
                <strong style="font-weight: bold"> Password </strong>
                <li>
                    @Html.Password("Password")
                    @* <input type="password" value="Password" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Password';}"><a href="#" class=" icon lock"></a>*@
                    <input id="checkbox1" type="checkbox" /><strong style="font-weight: bold"> Show</strong>
                </li>
            </div>
            <div class="sign-up">
                <strong style="font-weight: bold">Re-type Password </strong>
                <li>
                    @Html.Password("Re-type Password")
                    @* <input type="password" value="Password" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Password';}"><a href="#" class=" icon lock"></a>*@
                    <input id="checkbox1" type="checkbox" /> <strong style="font-weight: bold" font-color="red"> Show</strong>
                </li>
            </div>
            <li>
                <strong style="font-weight: bold">Question :</strong>
                @Html.DropDownList("Question")
                @* <input type="text" class="text" value="Question" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Question';}"><a href="#" class=" icon user"></a>*@
            </li>
            <li>
                <strong style="font-weight: bold">Answer :</strong>
                @Html.TextBox("Answer")
                @*<input type="text" class="text" value="Answer" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Answer';}"><a href="#" class=" icon user"></a>*@
            </li>
            <li>
                <div>
                    @Html.Captcha(refreshText: "Try Another", inputText: "Please Input Verification ", length: 6, requiredMessageText: "Is required field")
                </div>
            </li>
            <div class="p-container">
                <p><a href="https://localhost:44316/Login/Index"><strong style="font-weight: bold; color: blue; text-align: left;" color="Orange">Login</strong></a></p>
                <input type="submit" onclick="myFunction()" value="REGISTER NOW">
                <div class="clear"> </div>
            </div>
            <h1 style="color:red">@ViewBag.Notification</h1>
            <hr width="100%" align="center" color="Orange" />
        }
    </div>

</body>
</html>
